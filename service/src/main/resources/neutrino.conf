neutrino {

  actorSystem="neutrino"
  service.id=1
  service.name="neutrino-service"
  datacenter.id=1
  endpoint=${?NEUTRINO_HOST}
  port=2424

  geo {
    api-key="AIzaSyA7Gfhhx9bt0F73cpOTM8XlolRMX-DnIW4"
  }

  user {
    cassandraPort=9160
    cassandraHost="localhost"
    cassandraKeyspace="user"
  }

  auth {
    cassandraPort=9160
    cassandraHost="localhost"
    cassandraKeyspace="auth"
    fb {
      app-id=800587516688651
      app-secret="b59466a3500f21168131758c3dba4ce1"
    }
    google {
      client-id="28408523293-anc7i1vpi8qq4s3tqdissad4d2l6cbe7.apps.googleusercontent.com"
    }
  }

  search {
    creed {
      port=1601
      host="creed.goshoplane.com"
    }
  }

}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    deployment {
      /authentication-supervisor/user-account-supervisor {
        router = round-robin-group
        routees.paths = ["/user/user-account-supervisor"]
        cluster {
          enabled = on
          use-role = neutrino-user
          allow-local-routees = off
        }
      }
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "localhost"
      port = ${?NEUTRINO_PORT}
    }
  }

  cluster {
    auto-down-unreachable-after = 10s
  }
}

microservice {

  log-info = on

  # Number of attempts to get a leader
  # and join cluster with seed nodes
  retry-attempts-for-leader-election = 4

  # Zookeeper config
  zookeeper {
    url = "localhost:2181"
    seed-path = "/cluster/seed"
  }

  host = "localhost"
  port = ${?NEUTRINO_PORT}

}